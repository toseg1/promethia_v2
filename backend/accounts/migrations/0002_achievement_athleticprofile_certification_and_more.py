# Generated by Django 5.2.5 on 2025-08-28 12:17

import accounts.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("race_achievement", "Race Achievement"),
                            ("personal_record", "Personal Record"),
                            ("competition_results", "Competition Results"),
                            ("training_milestone", "Training Milestone"),
                            ("other", "Other"),
                        ],
                        help_text="Type of achievement",
                        max_length=30,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Year the achievement was earned"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the achievement", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the achievement"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Achievement",
                "verbose_name_plural": "Achievements",
                "ordering": ["-year", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AthleticProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        default=0, help_text="Years of experience in sports"
                    ),
                ),
                (
                    "about_notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the athlete"
                    ),
                ),
                (
                    "sports_involved",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("cycling", "Cycling"),
                            ("swimming", "Swimming"),
                            ("triathlon", "Triathlon"),
                        ],
                        default="running",
                        help_text="Primary sport involvement",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Athletic Profile",
                "verbose_name_plural": "Athletic Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("cycling", "Cycling"),
                            ("swimming", "Swimming"),
                            ("triathlon", "Triathlon"),
                            ("other", "Other"),
                        ],
                        help_text="Sport the certification is for",
                        max_length=50,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Year the certification was obtained"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the certification", max_length=200
                    ),
                ),
                (
                    "issuing_organization",
                    models.CharField(
                        help_text="Organization that issued the certification",
                        max_length=200,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Certification",
                "verbose_name_plural": "Certifications",
                "ordering": ["-year", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CoachAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("race_achievement", "Race Achievement"),
                            ("personal_record", "Personal Record"),
                            ("competition_results", "Competition Results"),
                            ("training_milestone", "Training Milestone"),
                            ("other", "Other"),
                        ],
                        help_text="Type of achievement",
                        max_length=30,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Year the achievement was earned"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the achievement", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the achievement"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Coach Achievement",
                "verbose_name_plural": "Coach Achievements",
                "ordering": ["-year", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProfessionalProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        default=0, help_text="Years of coaching experience"
                    ),
                ),
                (
                    "about_notes",
                    models.TextField(
                        blank=True, help_text="Professional background and expertise"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Professional Profile",
                "verbose_name_plural": "Professional Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterModelOptions(
            name="user",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.AlterModelManagers(
            name="user",
            managers=[],
        ),
        migrations.AddField(
            model_name="user",
            name="coach",
            field=models.ForeignKey(
                blank=True,
                help_text="Assigned coach (for athletes only)",
                limit_choices_to={"user_type": "coach"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="athletes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="country_number",
            field=models.CharField(
                default="+1",
                help_text="Country code (e.g., +1, +44, +33)",
                max_length=10,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Country code must be in format: +1 to +999",
                        regex="^\\+\\d{1,3}$",
                    )
                ],
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="css",
            field=models.FloatField(
                blank=True,
                help_text="Critical Swim Speed (m/s)",
                null=True,
                verbose_name="CSS",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="fpp",
            field=models.FloatField(
                blank=True,
                help_text="Functional Power Profile (watts)",
                null=True,
                verbose_name="FPP",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="mas",
            field=models.FloatField(
                blank=True,
                help_text="Maximum Aerobic Speed (km/h)",
                null=True,
                verbose_name="MAS",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_type",
            field=models.CharField(
                choices=[("athlete", "Athlete"), ("coach", "Coach")],
                default="athlete",
                help_text="User type: athlete or coach",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="first_name",
            field=models.CharField(default="", max_length=30),
        ),
        migrations.AlterField(
            model_name="user",
            name="last_name",
            field=models.CharField(default="", max_length=30),
        ),
        migrations.AlterField(
            model_name="user",
            name="phone_number",
            field=models.CharField(
                default="",
                help_text="Phone number in international format",
                max_length=20,
                validators=[accounts.models.validate_phone_number],
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="accounts_us_email_74c8d6_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["user_type"], name="accounts_us_user_ty_b6cfc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["coach"], name="accounts_us_coach_i_c7ddb8_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["created_at"], name="accounts_us_created_4734df_idx"
            ),
        ),
        migrations.AddField(
            model_name="athleticprofile",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"user_type": "athlete"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="athletic_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="achievement",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="achievements",
                to="accounts.athleticprofile",
            ),
        ),
        migrations.AddField(
            model_name="professionalprofile",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"user_type": "coach"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="professional_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="coachachievement",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="coach_achievements",
                to="accounts.professionalprofile",
            ),
        ),
        migrations.AddField(
            model_name="certification",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="certifications",
                to="accounts.professionalprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="athleticprofile",
            index=models.Index(fields=["user"], name="accounts_at_user_id_9d9021_idx"),
        ),
        migrations.AddIndex(
            model_name="athleticprofile",
            index=models.Index(
                fields=["sports_involved"], name="accounts_at_sports__b864ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="achievement",
            index=models.Index(
                fields=["profile"], name="accounts_ac_profile_2169dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="achievement",
            index=models.Index(
                fields=["category"], name="accounts_ac_categor_dea71c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="achievement",
            index=models.Index(fields=["year"], name="accounts_ac_year_f2c773_idx"),
        ),
        migrations.AddIndex(
            model_name="professionalprofile",
            index=models.Index(fields=["user"], name="accounts_pr_user_id_1529b5_idx"),
        ),
        migrations.AddIndex(
            model_name="coachachievement",
            index=models.Index(
                fields=["profile"], name="accounts_co_profile_711914_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coachachievement",
            index=models.Index(
                fields=["category"], name="accounts_co_categor_7346fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coachachievement",
            index=models.Index(fields=["year"], name="accounts_co_year_069384_idx"),
        ),
        migrations.AddIndex(
            model_name="certification",
            index=models.Index(
                fields=["profile"], name="accounts_ce_profile_83f62e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="certification",
            index=models.Index(fields=["sport"], name="accounts_ce_sport_5e56d7_idx"),
        ),
        migrations.AddIndex(
            model_name="certification",
            index=models.Index(fields=["year"], name="accounts_ce_year_09657d_idx"),
        ),
        migrations.AddIndex(
            model_name="certification",
            index=models.Index(
                fields=["issuing_organization"], name="accounts_ce_issuing_f6245d_idx"
            ),
        ),
    ]
