# Generated by Django 5.2.5 on 2025-08-28 12:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the event", max_length=200),
                ),
                ("date", models.DateTimeField(help_text="Date and time of the event")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "date_end",
                    models.DateTimeField(help_text="End date and time of the event"),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Event location (optional)",
                        max_length=200,
                    ),
                ),
                (
                    "event_color",
                    models.CharField(
                        choices=[
                            ("red", "Red"),
                            ("blue", "Blue"),
                            ("green", "Green"),
                            ("yellow", "Yellow"),
                            ("purple", "Purple"),
                            ("orange", "Orange"),
                        ],
                        default="blue",
                        help_text="Color for calendar display",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Event description"),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        help_text="Athlete this event belongs to",
                        limit_choices_to={"user_type": "athlete"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom Event",
                "verbose_name_plural": "Custom Events",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["athlete", "event_color"],
                        name="core_custom_athlete_e5ecd4_idx",
                    ),
                    models.Index(
                        fields=["date", "date_end"], name="core_custom_date_ec30fc_idx"
                    ),
                    models.Index(
                        fields=["event_color"], name="core_custom_event_c_a10941_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Race",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the event", max_length=200),
                ),
                ("date", models.DateTimeField(help_text="Date and time of the event")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("cycling", "Cycling"),
                            ("swimming", "Swimming"),
                            ("triathlon", "Triathlon"),
                        ],
                        help_text="Sport type for this race",
                        max_length=50,
                    ),
                ),
                (
                    "location",
                    models.CharField(help_text="Race location", max_length=200),
                ),
                (
                    "distance",
                    models.FloatField(help_text="Race distance in kilometers"),
                ),
                (
                    "finish_time",
                    models.DurationField(
                        blank=True,
                        help_text="Actual finish time (leave blank if not completed)",
                        null=True,
                    ),
                ),
                (
                    "target_time",
                    models.DurationField(
                        blank=True, help_text="Target finish time", null=True
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        help_text="Athlete this event belongs to",
                        limit_choices_to={"user_type": "athlete"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Race",
                "verbose_name_plural": "Races",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["athlete", "sport"], name="core_race_athlete_297ee0_idx"
                    ),
                    models.Index(fields=["sport"], name="core_race_sport_e4fde5_idx"),
                    models.Index(fields=["date"], name="core_race_date_3f7ebe_idx"),
                    models.Index(
                        fields=["location"], name="core_race_locatio_5e4ddb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Training",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the event", max_length=200),
                ),
                ("date", models.DateTimeField(help_text="Date and time of the event")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "duration",
                    models.DurationField(help_text="Duration of the training session"),
                ),
                ("time", models.TimeField(help_text="Time of the training session")),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("cycling", "Cycling"),
                            ("swimming", "Swimming"),
                            ("other", "Other"),
                        ],
                        help_text="Sport type for this training",
                        max_length=50,
                    ),
                ),
                (
                    "training_data",
                    models.JSONField(
                        default=dict,
                        help_text="Complex nested structure for workout builder",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the training"
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        help_text="Athlete this event belongs to",
                        limit_choices_to={"user_type": "athlete"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Session",
                "verbose_name_plural": "Training Sessions",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["athlete", "sport"],
                        name="core_traini_athlete_806c2f_idx",
                    ),
                    models.Index(fields=["sport"], name="core_traini_sport_c63380_idx"),
                    models.Index(fields=["date"], name="core_traini_date_9c6a93_idx"),
                ],
            },
        ),
    ]
