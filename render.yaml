services:
  # Backend API Service
  - type: web
    name: promethia-api
    runtime: python
    plan: starter
    buildCommand: "./backend/build.sh"
    startCommand: "cd backend && gunicorn backend.wsgi:application --timeout 120 --workers 2 --threads 4 --worker-class gthread"
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DEBUG
        value: False
      - key: SECRET_KEY
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: promethia-db
          property: connectionString
      - key: ALLOWED_HOSTS
        sync: false
      - key: CORS_ALLOWED_ORIGINS
        value: https://promethia.app,https://www.promethia.app
      - key: FRONTEND_URL
        value: https://promethia.app
      - key: CSRF_TRUSTED_ORIGINS
        value: https://promethia.app,https://www.promethia.app,https://api.promethia.app
      - key: USE_CLOUDINARY
        value: True
      - key: CLOUDINARY_CLOUD_NAME
        sync: false
      - key: CLOUDINARY_API_KEY
        sync: false
      - key: CLOUDINARY_API_SECRET
        sync: false
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.smtp.EmailBackend
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: True
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false
      - key: DEFAULT_FROM_EMAIL
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: promethia-redis
          property: connectionString
    domains:
      - api.promethia.app

  # Celery Worker Service
  - type: worker
    name: promethia-celery
    runtime: python
    plan: starter
    buildCommand: "./backend/build.sh"
    startCommand: "cd backend && celery -A backend worker --loglevel=info"
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DEBUG
        value: False
      - key: SECRET_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: promethia-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: promethia-redis
          property: connectionString
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.smtp.EmailBackend
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: True
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false
      - key: DEFAULT_FROM_EMAIL
        sync: false
      - key: FRONTEND_URL
        value: https://promethia.app

  # Frontend Service
  - type: web
    name: promethia-frontend
    runtime: node
    plan: starter
    buildCommand: "cd frontend && npm install && npm run build"
    staticPublishPath: ./frontend/dist
    envVars:
      - key: NODE_VERSION
        value: 20.11.0
      - key: VITE_DJANGO_API_URL
        value: https://api.promethia.app/api/v1
    domains:
      - promethia.app
      - www.promethia.app
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  - name: promethia-db
    plan: starter
    databaseName: promethia_production
    user: promethia_user

# Redis for Celery
- type: redis
  name: promethia-redis
  plan: starter
  maxmemoryPolicy: noeviction
  ipAllowList: []
